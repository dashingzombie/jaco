// Generated by gencpp from file kinova_optimization/RelaxedIKSolution.msg
// DO NOT EDIT!


#ifndef KINOVA_OPTIMIZATION_MESSAGE_RELAXEDIKSOLUTION_H
#define KINOVA_OPTIMIZATION_MESSAGE_RELAXEDIKSOLUTION_H

#include <ros/service_traits.h>


#include <kinova_optimization/RelaxedIKSolutionRequest.h>
#include <kinova_optimization/RelaxedIKSolutionResponse.h>


namespace kinova_optimization
{

struct RelaxedIKSolution
{

typedef RelaxedIKSolutionRequest Request;
typedef RelaxedIKSolutionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RelaxedIKSolution
} // namespace kinova_optimization


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kinova_optimization::RelaxedIKSolution > {
  static const char* value()
  {
    return "6b5f4afa17d360a74ece426d894ae4ff";
  }

  static const char* value(const ::kinova_optimization::RelaxedIKSolution&) { return value(); }
};

template<>
struct DataType< ::kinova_optimization::RelaxedIKSolution > {
  static const char* value()
  {
    return "kinova_optimization/RelaxedIKSolution";
  }

  static const char* value(const ::kinova_optimization::RelaxedIKSolution&) { return value(); }
};


// service_traits::MD5Sum< ::kinova_optimization::RelaxedIKSolutionRequest> should match
// service_traits::MD5Sum< ::kinova_optimization::RelaxedIKSolution >
template<>
struct MD5Sum< ::kinova_optimization::RelaxedIKSolutionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kinova_optimization::RelaxedIKSolution >::value();
  }
  static const char* value(const ::kinova_optimization::RelaxedIKSolutionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kinova_optimization::RelaxedIKSolutionRequest> should match
// service_traits::DataType< ::kinova_optimization::RelaxedIKSolution >
template<>
struct DataType< ::kinova_optimization::RelaxedIKSolutionRequest>
{
  static const char* value()
  {
    return DataType< ::kinova_optimization::RelaxedIKSolution >::value();
  }
  static const char* value(const ::kinova_optimization::RelaxedIKSolutionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kinova_optimization::RelaxedIKSolutionResponse> should match
// service_traits::MD5Sum< ::kinova_optimization::RelaxedIKSolution >
template<>
struct MD5Sum< ::kinova_optimization::RelaxedIKSolutionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kinova_optimization::RelaxedIKSolution >::value();
  }
  static const char* value(const ::kinova_optimization::RelaxedIKSolutionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kinova_optimization::RelaxedIKSolutionResponse> should match
// service_traits::DataType< ::kinova_optimization::RelaxedIKSolution >
template<>
struct DataType< ::kinova_optimization::RelaxedIKSolutionResponse>
{
  static const char* value()
  {
    return DataType< ::kinova_optimization::RelaxedIKSolution >::value();
  }
  static const char* value(const ::kinova_optimization::RelaxedIKSolutionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KINOVA_OPTIMIZATION_MESSAGE_RELAXEDIKSOLUTION_H
